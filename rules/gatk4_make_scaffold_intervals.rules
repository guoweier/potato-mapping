rule gatk4_make_scaffold_intervals:
    input:
        config["genome"]
    output:
        "data/intervals/gatk-haplocaller.intervals"
    run:
        ofh = output[0]
        o = open(ofh, 'w')
        with open(input[0]) as handle:
            for record in SeqIO.parse(handle, 'fasta'):
                start = 1
                outputstr = ""
                
                # divide by scaffold joins in potato assembly, which are 50,000 "N" nucleotides
                for match in re.finditer('N{50000}', str(record.seq)):
                    outputstr += (record.id + ":" + str(start) + "-" + str(match.start()) +'\n')
                    start = match.end() + 1 # start becomes 1-based match end for next gap
                
                # if scaffold wasn't divided by 50k N, divide using a smaller gap size
                if start == 1: 
                    for match in re.finditer('N{3000,}', str(record.seq)):
                        outputstr += (record.id + ":" + str(start) + "-" + str(match.start()) +'\n')
                        start = match.end() + 1 # start becomes 1-based match end for next gap

                # handle last nongap in fasta record
                outputstr += (record.id + ":" + str(start) + "-" + str(len(record)) +'\n')
                o.write(outputstr)